<Activity mc:Ignorable="sap sap2010" x:Class="PostMergeActivity" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>554.4,1092.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>PostMergeActivity_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="After merge and before exist do the following:&#xA;1 remove duplicate record&#xA;2 set asset ReadyToMerge as False&#xA;3 require edit asset permission for robot on orchestrator" DisplayName="PostMergeActivity" sap:VirtualizedContainerService.HintSize="564.8,928" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtForRemoveDuplicate" />
      <Variable x:TypeArguments="s:Exception" Name="Exceptions" />
      <Variable x:TypeArguments="x:Boolean" Name="NotStopBecauseZXSBSJ_ReadyIsFalse" />
      <Variable x:TypeArguments="x:String" Name="TargetFilename" />
      <Variable x:TypeArguments="x:String" Name="TempFilename" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="523.2,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Config]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[in_Config]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="ZXSBSJ_Ready" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="523.2,22.4" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Boolean">[NotStopBecauseZXSBSJ_ReadyIsFalse]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <Assign sap:VirtualizedContainerService.HintSize="523.2,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[NotStopBecauseZXSBSJ_ReadyIsFalse]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">[not NotStopBecauseZXSBSJ_ReadyIsFalse]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[NotStopBecauseZXSBSJ_ReadyIsFalse]" sap:VirtualizedContainerService.HintSize="523.2,496.8" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="379.2,347.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="337.6,161.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[TargetFilename]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Config("ResultFilePath").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[TempFilename]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Config("TempWorkingFilename").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="s:Exception">[Exceptions]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="520,1582.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="425.6,1351.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;remove duplicated record&quot;]" />
                <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[dtForRemoveDuplicate]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[TempFilename]" sap:VirtualizedContainerService.HintSize="384,155.2" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
                <Assign sap2010:Annotation.AnnotationText="Remove all duplicated record which date, time and machine name is same" sap:VirtualizedContainerService.HintSize="384,104" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtForRemoveDuplicate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[(From roww In dtForRemoveDuplicate.AsEnumerable() Group By id=New With {key .i=roww.item("Date"),key .d=roww.item("UTC Time"), key .s=roww.item("filename")} Into gg=Group Select gg(0)).copytodatatable]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[dtForRemoveDuplicate]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[TempFilename]" sap:VirtualizedContainerService.HintSize="384,155.2" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;copy temp working file to replace result file&quot;]" />
                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[TargetFilename]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[TempFilename]" />
                <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Delete merged original csv files" Code="Array.ForEach(Directory.GetFiles(path,&quot;*.csv&quot;),Sub(x) File.Delete(x))" DisplayName="Invoke code（delete download)" sap:VirtualizedContainerService.HintSize="384,196" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                  <ui:InvokeCode.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="path">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;FileForMergePath&quot;).ToString" />
                    </InArgument>
                  </ui:InvokeCode.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeCode>
                <ui:SetAsset TimeoutMS="{x:Null}" AssetName="ZXSBSJ_Merged_ForFurtherProcess" DisplayName="Set Asset" sap:VirtualizedContainerService.HintSize="384,22.4" sap2010:WorkflowViewState.IdRef="SetAsset_2" Value="[True]" />
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="486.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[exceptions]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[new system.Exception("Error occured!")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
            <TryCatch.Finally>
              <If sap2010:Annotation.AnnotationText="IF all process finished&#xA;set ZXSBSJ_Ready to false to prevent re-process" Condition="[Exceptions is Nothing]" sap:VirtualizedContainerService.HintSize="483.2,433.6" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Get item and mark processed" sap:VirtualizedContainerService.HintSize="241.6,240" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:QueueItem" Name="TriggerItem" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SetAsset TimeoutMS="{x:Null}" AssetName="ZXSBSJ_Ready" DisplayName="Set Asset(Change ZXSBSJ_Ready to false)" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[False]" />
                    <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="QueueForTiggerMerge" TransactionItem="[TriggerItem]" />
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[TriggerItem]">
                      <ui:SetTransactionStatus.Analytics>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Analytics>
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                    </ui:SetTransactionStatus>
                  </Sequence>
                </If.Then>
              </If>
            </TryCatch.Finally>
          </TryCatch>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>